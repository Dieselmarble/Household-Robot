#footprint: [[-0.17,-0.17],[-0.17,0.17],[0.17,0.17],[0.17,0.01],[0.25,0.01],[0.25,-0.01],[0.17,-0.01],[0.17,-0.17]]
robot_radius: 0.22   #0.20

obstacle_layer:
  enabled: true
  max_obstacle_height: 0.4 #0.6
  min_obstacle_height: 0.1
  obstacle_range: 2.0 #2.0
  raytrace_range: 1.0 # 3.0
  inflation_radius: 0.02 #0.1
  combination_method: 1
  observation_sources: laser_scan_sensor
  track_unknown_space: true
 
  origin_z: 0.0
  z_resolution: 0.1
  z_voxels: 10
  unknown_threshold: 15
  mark_threshold: 0
  publish_voxel_map: true
  footprint_clearing_enabled: true

  laser_scan_sensor:
    data_type: LaserScan
    topic: /scan_filtered #is prob is marked as let
    expected_update_rate: 0
    min_obstacle_height: 0.00
    max_obstacle_height: 0.30
  
  # sonar_scan_sensor:
  #   data_type: Range
  #   topic: /sonar0
  #   marking: trueis prob is marked as let
  #   clearing: true
  #   min_obstacle_height: 0.0
  #   max_obstacle_height: 0.3
  #   observation_persistence: 0.0

# realsense_layer:
#   enabled: true
#   max_obstacle_height: 2 #0.6
#   min_obstacle_height: 0.2
#   obstacle_range: 2.0 #2.0
#   raytrace_range: 2.0 # 3.0
#   inflation_radius: 0.05 #0.1
#   combination_method: 1
#   observation_sources: realsense_sensor
#   track_unknown_space: true

#   origin_z: 0.0
#   z_resolution: 0.1
#   z_voxels: 10
#   unknown_threshold: 15
#   mark_threshold: 0
#   publish_voxel_map: true
#   footprint_clearing_enabled: true

#   realsense_sensor:
#     data_type: PointCloud2
#     topic: /cam_2/depth/color/points/filtered
#     marking: true
#     clearing: true
#     expected_update_rate: 0
#     min_obstacle_height: 0.20
#     max_obstacle_height: 2.20
#     observation_persistence: 0.20

sonar_layer:
  enabled: true
  clear_threshold: 0.2 # lower than is prob is marked as safe 0.4
  mark_threshold: 0.96 # higher than is prob is marked as lethal
  topics: ["/sonar0", "/sonar1", "/sonar2", "/sonar3", "/sonar4"]
  clear_on_max_reading: true

inflation_layer:
  enabled:              true
  cost_scaling_factor:  10 # exponential rate at which the obstacle cost drops off (default: 10)
  inflation_radius:     0.06 # 0.20 max. distance from an obstacle at which costs are incurred for planning paths. default 0.40

static_layer:
  enabled:              true
  map_topic:            "/map"

# rgbd_obstacle_layer:
#   enabled:               true
#   voxel_decay:           3      #seconds if linear, e^n if exponential
#   decay_model:           0      #0=linear, 1=exponential, -1=persistent
#   voxel_size:            0.10   #meters
#   track_unknown_space:   true   #default space is unknown
#   observation_persistence: 0.0  #seconds
#   max_obstacle_height:   2.0    #meters
#   unknown_threshold:     10     #voxel height
#   mark_threshold:        10      #voxel height
#   update_footprint_enabled: true
#   combination_method:    1      #1=max, 0=override
#   obstacle_range:        3.0    #meters
#   origin_z:              0.0    #meters
#   publish_voxel_map:     true   # default off
#   transform_tolerance:   0.2    # seconds
#   mapping_mode:          false  # default off, saves map not for navigation
#   map_save_duration:     60     #default 60s, how often to autosave
#   observation_sources:   rgbd1_clear rgbd1_mark
#   rgbd1_mark:
#     enabled: true
#     data_type: PointCloud2
#     topic: /cam_2/depth/color/points/filtered
#     marking: false
#     clearing: false
#     min_obstacle_height: 0.2     #default 0, meters
#     max_obstacle_height: 2.5     #defaule 3, meters
#     expected_update_rate: 0.0    #default 0, if not updating at this rate at least, remove from buffer
#     observation_persistence: 0.0 #default 0, use all measurements taken during now-value, 0=latest 
#     inf_is_valid: false          #default false, for laser scans
#     clear_after_reading: true    #default false, clear the buffer after the layer gets readings from it
#     # filter: "voxel"              #default passthrough, apply "voxel", "passthrough", or no filter to sensor data, recommended to have at one filter on
#     # voxel_min_points: 0          #default 0, minimum points per voxel for voxel filter
#   rgbd1_clear:
#     enabled: true                #default true, can be toggled on/off with associated service call
#     data_type: PointCloud2
#     topic: /cam_2/depth/color/points/filtered
#     marking: false
#     clearing: true
#     min_z: 0.2                   #default 0, meters
#     max_z: 2.0                   #default 10, meters
#     vertical_fov_angle: 2.4      #default 0.7, radians
#     horizontal_fov_angle: 2.4   #default 1.04, radians
#     decay_acceleration: 1 #1.0       #default 0, 1/s^2. If laser scanner MUST be 0
#     model_type: 0                #default 0 (depth camera). Use 1 for 3D Lidar
